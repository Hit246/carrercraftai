rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    function isAuthenticated() {
      return request.auth != null;
    }

    // Avatars: Users can only upload/update their own avatar.
    match /avatars/{userId} {
      allow read: if true;
      allow write: if isAuthenticated() && request.auth.uid == userId;
    }

    // Payment Proofs: Users can only upload their own proof.
    match /payment_proofs/{userId}/{fileName} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
    }

    // Team Resumes: Recruiters/admins can upload resumes for their team.
    match /teams/{teamId}/resumes/{fileName} {
      function isTeamOwner() {
        return isAuthenticated() && get(/databases/$(database)/documents/teams/$(teamId)).data.owner == request.auth.uid;
      }
      function isTeamMember() {
          return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.teamId == teamId;
      }
      allow read, write: if isTeamOwner() || isTeamMember();
    }
  }
}
