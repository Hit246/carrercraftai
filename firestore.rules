rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users can only read/write their own document
    match /users/{userId} {
      allow read, update, delete: if isOwner(userId);
      allow create: if request.auth != null;

      // Users can manage their own resume versions
      match /resumeVersions/{versionId} {
        allow read, write: if isOwner(userId);
      }
    }

    // Teams can be read by anyone, but only created by authenticated users
    match /teams/{teamId} {
      allow read;
      allow create: if request.auth != null;

      // Team members can be managed by the team owner
      match /members/{memberId} {
        allow read;
        allow write, delete: if get(/databases/$(database)/documents/teams/$(teamId)).data.owner == request.auth.uid;
      }
    }

    // Public settings are readable by anyone, but only writable by admins (not enforced by rules, but by backend logic)
    match /settings/{settingId} {
      allow read: if true;
      allow write: if false; // Managed via Admin SDK
    }

    // Users can create support requests for themselves
    match /supportRequests/{requestId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read, write: if false; // Only accessible via Admin SDK
    }
  }
}
