
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read, update, delete: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;

      // This rule allows a user to perform all actions on their own resume versions.
      // The 'read' permission includes both 'get' (single doc) and 'list' (queries).
      // The 'write' permission includes 'create', 'update', and 'delete'.
      match /resumeVersions/{versionId} {
        allow read, write: if request.auth.uid == userId;
      }
    }

    match /teams/{teamId} {
      // Owner can do anything.
      allow read, write: if request.auth.uid == resource.data.owner;

      // Any authenticated user can read team details if they are a member.
      // This is checked by seeing if their user document has a matching teamId.
      allow read: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.teamId == teamId;

      match /members/{memberId} {
        // Team owner can add/remove members.
        allow read, write, delete: if request.auth.uid == get(/databases/$(database)/documents/teams/$(teamId)).data.owner;
      }
    }

    match /settings/payment {
      // Any authenticated user can read payment settings.
      allow get: if request.auth != null;
      // Write access should be restricted to admins in a real app, but is open for this demo.
      allow write: if request.auth != null;
    }

    match /supportRequests/{requestId} {
      // User can create their own support requests.
      allow create: if request.auth.uid == request.resource.data.userId;
      // Admins (or a support role) would have read/update access. For now, it's restricted.
      allow read, update, delete: if false; // Change in a real app
    }
  }
}
