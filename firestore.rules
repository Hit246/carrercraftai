rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      // In a production app, use custom claims: request.auth.token.isAdmin == true
      return request.auth.token.email in ['admin@careercraft.ai', 'hitarth0236@gmail.com'];
    }

    // Helper function to check if a user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users can only be created if the document ID matches the authenticated user's ID.
    match /users/{userId} {
      allow read, update: if isOwner(userId) || isAdmin();
      allow create: if isOwner(userId);
      
      // Resume Versions Subcollection
      match /resumeVersions/{versionId} {
        allow read, write: if isOwner(userId) || isAdmin();
      }
    }

    // Teams Collection
    match /teams/{teamId} {
      function isTeamOwner() {
        return request.auth.uid == get(/databases/$(database)/documents/teams/$(teamId)).data.owner;
      }
      
      function isTeamMember() {
         return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.teamId == teamId;
      }

      allow read: if isAdmin() || isTeamOwner() || isTeamMember();
      allow write: if isAdmin() || isTeamOwner();
      allow create: if request.auth != null;

      // Members Subcollection
      match /members/{memberId} {
        allow read, write: if isAdmin() || isTeamOwner();
      }

      // Candidates Subcollection
      match /candidates/{candidateId} {
          allow read, write: if isAdmin() || isTeamOwner() || isTeamMember();
      }
    }

    // Settings Collection
    match /settings/{settingId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    // Support Requests Collection
    match /supportRequests/{requestId} {
      allow create: if isOwner(request.resource.data.userId);
      allow read, write: if isAdmin();
    }
  }
}