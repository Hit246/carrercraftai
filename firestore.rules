rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      return request.auth.token.email in ['admin@careercraft.ai', 'hitarth0236@gmail.com'];
    }

    // Helper function to check if a user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users Collection
    match /users/{userId} {
      // Admins can read/write any user document.
      // Regular users can only read/write their own document.
      allow read, write: if isOwner(userId) || isAdmin();

      // Any authenticated user can create their own user document during signup.
      allow create: if request.auth != null;

      // Resume Versions Subcollection
      match /resumeVersions/{versionId} {
        // A user can read/write their own resume versions. Admins can read any.
        allow write: if isOwner(userId) || isAdmin();
        allow read: if isOwner(userId) || isAdmin();
      }
    }

    // Teams Collection
    match /teams/{teamId} {
      // Admins can read/write any team data.
      // Team data can be read by its members.
      function isMember() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.teamId == teamId;
      }
      allow read, write: if isAdmin() || isMember();
      allow create: if request.auth != null;

      // Members Subcollection
      match /members/{memberId} {
        allow read, write: if isAdmin() || get(/databases/$(database)/documents/teams/$(teamId)).data.owner == request.auth.uid;
      }
    }

    // Settings Collection
    match /settings/{settingId} {
      // Settings can be read by anyone (for payment details)
      // but only written to by an admin.
      allow read: if true;
      allow write: if request.auth != null;
    }

    // Support Requests Collection
    match /supportRequests/{requestId} {
      // Users can create their own support requests.
      allow create: if isOwner(request.resource.data.userId);
      // Admins can read/write all support requests.
      allow read, write: if isAdmin();
    }
  }
}