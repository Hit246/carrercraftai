rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      return request.auth.token.email in ['admin@careercraft.ai', 'hitarth0236@gmail.com'];
    }

    // Helper function to check if the user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Admins can read/write any user document
      // Authenticated users can only read/write their own document
      allow read, write: if isAdmin() || isOwner(userId);

      // Rules for the 'resumeVersions' subcollection
      match /resumeVersions/{versionId} {
        // Only the owner of the user document can manage their resume versions
        allow read, write, delete: if isOwner(userId);
      }
    }
    
    // Rules for the 'teams' collection
    match /teams/{teamId} {
      // Allow read for any authenticated user (e.g., to find team info)
      allow read: if request.auth != null;
      // Only admins can create, update, or delete teams directly
      allow write: if isAdmin();
      
      // Rules for the 'members' subcollection
      match /members/{memberId} {
        // Any authenticated user can read members (to see team list)
        allow read: if request.auth != null;
        // Only admins can add/remove members
        allow write: if isAdmin() || get(/databases/$(database)/documents/teams/$(teamId)).data.owner == request.auth.uid;
      }
      
      // Rules for the 'candidates' subcollection
      match /candidates/{candidateId} {
         // Team owner/admins can manage candidates
        allow read, write, delete: if isAdmin() || get(/databases/$(database)/documents/teams/$(teamId)).data.owner == request.auth.uid;
      }
    }

    // Rules for the 'settings' collection
    match /settings/{settingId} {
      // Allow read for any authenticated user (to get payment info)
      allow read: if request.auth != null;
      // Only admins can change settings
      allow write: if isAdmin();
    }

    // Rules for the 'supportRequests' collection
    match /supportRequests/{requestId} {
      // Admins can read/write any support request.
      // Users can read their own support requests.
      allow read: if isAdmin() || isOwner(resource.data.userId);

      // Authenticated users can create a support request if they are the owner.
      allow create: if isOwner(request.resource.data.userId);
      
      // Only admins can update or delete support requests.
      allow update, delete: if isAdmin();

      // Rules for the 'history' subcollection
      match /history/{messageId} {
        // Admins can read any history.
        // The user who owns the parent request can read its history.
        allow read: if isAdmin() || isOwner(get(/databases/$(database)/documents/supportRequests/$(requestId)).data.userId);

        // A user can create a message if they own the parent request.
        // An admin can create a message.
        allow create: if isAdmin() || isOwner(get(/databases/$(database)/documents/supportRequests/$(requestId)).data.userId);
      }
    }
  }
}
