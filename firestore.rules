rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if a user is an admin
    function isAdmin() {
      return request.auth.token.email in ['admin@careercraft.ai', 'hitarth0236@gmail.com'];
    }

    // Helper function to check if the user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Helper function to get user data
    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }
    
    // Users can read/write to their own data. Admins can read/write to any user's data.
    match /users/{userId} {
      allow read, update, delete: if isOwner(userId) || isAdmin();
      allow create: if request.auth != null;
    }

    // Resumes are private and can only be accessed by their owner.
    match /resumes/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // Team data can be read by team members. Only the owner can update the team.
    match /teams/{teamId} {
      allow read: if request.auth != null && getUserData(request.auth.uid).teamId == teamId;
      allow write: if request.auth != null && getUserData(request.auth.uid).uid == resource.data.owner;
      
      // Team members can be read by anyone in the team. Only the owner can manage members.
      match /members/{memberId} {
        allow read: if request.auth != null && getUserData(request.auth.uid).teamId == teamId;
        allow create, delete: if request.auth != null && get(/databases/$(database)/documents/teams/$(teamId)).data.owner == request.auth.uid;
      }
    }
    
    // Settings can only be read and written by admins.
    match /settings/{docId} {
      allow read, write: if isAdmin();
    }
  }
}
