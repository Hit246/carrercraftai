rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      return request.auth.token.email in ['admin@careercraft.ai', 'hitarth0236@gmail.com'];
    }

    // Users can read/write their own user document
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;

      // Users can manage their own resume versions
      match /resumeVersions/{versionId} {
        allow read, write, delete: if request.auth.uid == userId;
      }
    }

    // Teams can be read by their members
    match /teams/{teamId} {
      allow get: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.teamId == teamId;

      // Team members can be read by other members of the same team
      match /members/{memberId} {
         allow list: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.teamId == teamId;
         allow write, delete: if get(/databases/$(database)/documents/teams/$(teamId)).data.owner == request.auth.uid;
      }
      
      // Candidates can be managed by team members
      match /candidates/{candidateId} {
        allow read, write, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.teamId == teamId;
      }
    }
    
    // Admins can manage all support requests
    match /supportRequests/{requestId} {
      allow read, write, list: if isAdmin();
      // Users can create their own support requests
      allow create: if request.auth.uid == request.resource.data.userId;
    }

    // Settings are read-only for users, writable for admins
    match /settings/payment {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
  }
}
